{"version":3,"sources":["api/todosApi.js","services/todosService.js","redux/slices/lists.js","redux/actions/configuration.js","themes/default.js","redux/slices/configuration.js","themes/secondary.js","redux/store.js","components/Themed.js","logo.svg","components/AppNav.js","components/TodosNav.js","App.js","reportWebVitals.js","components/ListItem.js","pages/ListsPage.js","pages/TodosPage.js","pages/NotFoundPage.js","pages/AboutPage.js","pages/ConfigurationPage.js","index.js"],"names":["axios","create","baseURL","headers","interceptors","response","use","data","error","errorPayload","errorMessage","toJSON","message","payload","console","log","fakeApi","get","params","a","id","name","description","todos","todosService","getLists","todosApi","postList","list","post","createAsyncThunk","listsSlice","createSlice","initialState","loading","extraReducers","fulfilled","state","action","items","setConfiguration","configuration","fetchConfigOptions","themes","docs","type","languages","configurationActions","defaultTheme","palette","primary","main","colors","amber","secondary","pink","A700","defaultLanguage","theme","language","lightBlue","grey","configurationSlice","reducers","setLoading","setTheme","actions","lists","listsReducer","store","configureStore","reducer","devTools","Themed","children","useSelector","appTheme","createTheme","ThemeProvider","useStyles","makeStyles","link","textDecoration","color","AppNav","classes","useState","anchorEl","setAnchorEl","navigate","useNavigate","location","useLocation","closeMenu","AppBar","position","Toolbar","sx","display","justifyContent","Typography","variant","component","className","title","to","Avatar","src","logoSrc","alt","pageName","IconButton","onClick","event","currentTarget","Menu","open","Boolean","onClose","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","ListItemIcon","ListsNav","useParams","alert","listId","App","isTodosPage","pathname","includes","TodosNav","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ListItem","finishedTodos","useMemo","length","filter","t","isDone","percentage","Box","bgcolor","minWidth","minHeight","maxWidth","maxHeight","borderRadius","padding","flexDirection","alignSelf","fontSize","toUpperCase","marginBottom","LinearProgress","value","fab","top","spacing","right","ListsPage","dispatch","useDispatch","useEffect","page","pageSize","Grid","container","map","l","item","xs","sm","md","lg","renderLists","Fab","TodosPage","NotFoundPage","AboutPage","ConfigurationPage","appConfig","modalOpen","setModalOpen","isDarkMode","inputs","setInputs","closeModal","handleSelectChange","target","find","p","Button","size","startIcon","ModeEdit","Dialog","DialogTitle","DialogContent","dividers","FormControl","margin","InputLabel","Select","labelId","label","onChange","e","alignItems","FormControlLabel","control","Switch","checked","DarkMode","DialogActions","process","ReactDOM","render","StrictMode","CssBaseline","basename","path","element","index","document","getElementById"],"mappings":"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","file":"static/js/main.7d254501.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst successCb = (response) => response.data;\nconst errorCb = (error) => {\n  const errorPayload = {\n    errorMessage: error.toJSON().message,\n  };\n\n  const payload = error.response?.data || errorPayload;\n\n  console.log(\"# on axios error CB\");\n\n  return payload;\n};\n\nconst api = axios.create({\n  baseURL: \"apiUrl\", // TODO: get from env\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\napi.interceptors.response.use(successCb, errorCb);\n\n// export default api;\n\nconst fakeApi = {\n  get: async (params) => [\n    { id: \"333ll\", name: \"Test\", description: \"Test description\", todos: [] },\n    { id: \"444\", name: \"Cena\", description: \"Test description\", todos: [] },\n    { id: \"555\", name: \"Comida\", description: \"Test description\", todos: [] },\n    { id: \"666\", name: \"Desayuno\", description: \"Test description\", todos: [] },\n    { id: \"777\", name: \"Postre\", description: \"Test description\", todos: [] },\n  ],\n};\n\nexport default fakeApi;\n","import todosApi from \"../api/todosApi\";\n\nexport const getLists = (params) => todosApi.get(\"/lists\", { params });\nexport const postList = (list) => todosApi.post(\"/lists\", list);\n\nconst todosService = { getLists, postList };\n\nexport default todosService;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n\nimport todosService from \"../../services/todosService\";\n\n// define actions here\nexport const getLists = createAsyncThunk(\"lists/get\", todosService.getLists);\n// export const createList\n// export const updateList\n// export const removeList\n\nconst initialState = { loading: true };\n\nconst listsSlice = createSlice({\n  name: \"lists\",\n  initialState,\n  extraReducers: {\n    [getLists.fulfilled]: (state, action) => {\n      state.items = action.payload;\n      state.loading = false;\n    },\n  },\n});\n\nexport default listsSlice.reducer;\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\n\n// actions for App configuration\nexport const setConfiguration = createAsyncThunk(\n  \"configuration/set\",\n  async (configuration) => {\n    // TODO:\n    // add service method\n    // patch user configuration\n    return configuration;\n  }\n);\n\nexport const fetchConfigOptions = createAsyncThunk(\n  \"configuration/fetchOptions\",\n  async (params) => ({\n    themes: {\n      docs: [\n        { id: \"123\", name: \"Dark green\", type: \"dark\" },\n        { id: \"456\", name: \"Light blue\", type: \"light\" },\n      ],\n    },\n    languages: {\n      docs: [\n        { id: \"1\", name: \"English\" },\n        { id: \"2\", name: \"Spanish\" },\n      ],\n    },\n  })\n);\n\nconst configurationActions = {\n  setConfiguration,\n  fetchConfigOptions,\n};\nexport default configurationActions;\n","import { colors } from \"@mui/material\";\n\nconst defaultTheme = {\n  id: \"defaultId\",\n  name: \"Amber and pink ;)\",\n  palette: {\n    type: \"light\",\n    primary: {\n      main: colors.amber[800],\n    },\n    secondary: {\n      main: colors.pink.A700,\n    },\n  },\n};\n\nexport default defaultTheme;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport configurationActions from \"../actions/configuration\";\n\nimport defaultTheme from \"../../themes/default\";\nimport secondaryTheme from \"../../themes/secondary\";\nconst defaultLanguage = { id: \"defaultId\", name: \"English\" };\n\nconst initialState = {\n  theme: defaultTheme,\n  language: defaultLanguage,\n  themes: { items: [defaultTheme, secondaryTheme], loading: false },\n  languages: { items: [defaultLanguage], loading: false },\n};\n\nconst configurationSlice = createSlice({\n  name: \"configuration\",\n  initialState,\n  reducers: {\n    setLoading: (state, action) => {\n      state.loading = action.payload;\n    },\n    setTheme: (state, action) => {\n      state.theme = action.payload;\n    },\n  },\n  extraReducers: {\n    [configurationActions.setConfiguration.fulfilled]: (state, action) => {\n      if (action.payload.theme) state.theme = action.payload.theme;\n      if (action.payload.language) state.language = action.payload.language;\n      state.loading = false;\n\n      console.log(\"## reducer updating app state\");\n      console.log(action.payload);\n    },\n    [configurationActions.fetchConfigOptions.fulfilled]: (state, action) => {\n      state.themes = action.payload.themes;\n      state.languages = action.payload.languages;\n      state.loading = false;\n    },\n  },\n});\n\nexport const { setTheme } = configurationSlice.actions;\nexport default configurationSlice.reducer;\n","import { colors } from \"@mui/material\";\n\nconst secondaryTheme = {\n  id: \"secondaryId\",\n  name: \"Secondary theme\",\n  palette: {\n    type: \"light\",\n    primary: {\n      main: colors.lightBlue[400],\n    },\n    secondary: {\n      main: colors.grey.A700,\n    },\n  },\n};\n\nexport default secondaryTheme;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport listsReducer from \"./slices/lists\";\nimport configurationReducer from \"./slices/configuration\";\n// import authReducer from './slices/auth'\n\nconst reducers = {\n  // auth: authReducer,\n  configuration: configurationReducer,\n  lists: listsReducer,\n};\n\nconst store = configureStore({\n  reducer: reducers,\n  devTools: true,\n});\n\nexport default store;\n","import { ThemeProvider, createTheme } from \"@mui/material/styles\";\nimport { useSelector } from \"react-redux\";\n\nconst Themed = ({ children }) => {\n  const theme = useSelector((store) => store.configuration.theme);\n  const appTheme = createTheme(theme || {});\n  return <ThemeProvider theme={appTheme}>{children}</ThemeProvider>;\n};\n\nexport default Themed;\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from \"react\";\nimport { Link, useNavigate, useLocation } from \"react-router-dom\";\n\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  IconButton,\n  Menu,\n  MenuItem,\n  ListItemIcon,\n  Avatar,\n} from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport MenuOutlinedIcon from \"@mui/icons-material/MenuOutlined\";\nimport InfoIcon from \"@mui/icons-material/Info\";\nimport SettingsIcon from \"@mui/icons-material/Settings\";\n\nimport logoSrc from \"../logo.svg\";\n\nconst useStyles = makeStyles(() => ({\n  link: {\n    textDecoration: \"none\",\n    color: \"inherit\",\n  },\n}));\n\nconst AppNav = () => {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const handleMenu = (event) => setAnchorEl(event.currentTarget);\n\n  const closeMenu = () => setAnchorEl(null);\n\n  const handleConfigurationClick = () => {\n    closeMenu();\n    navigate(\"/configuration\", { state: { pageName: \"Configuration\" } });\n  };\n\n  const handleAboutClick = () => {\n    closeMenu();\n    navigate(\"/about\", { state: { pageName: \"About\" } });\n  };\n\n  return (\n    <>\n      <AppBar position=\"fixed\">\n        <Toolbar sx={{ display: \"flex\", justifyContent: \"space-between\" }}>\n          <Typography variant=\"h6\" component=\"label\" className={classes.title}>\n            <Link className={classes.link} to=\"/\">\n              <Avatar src={logoSrc} alt=\"Todo App\" />\n            </Link>\n          </Typography>\n          <Typography variant=\"h6\" component=\"label\">\n            {location.state?.pageName || \"Lists\"}\n          </Typography>\n          <div>\n            <IconButton onClick={handleMenu} color=\"inherit\">\n              <MenuOutlinedIcon />\n            </IconButton>\n            <Menu\n              anchorEl={anchorEl}\n              open={Boolean(anchorEl)}\n              onClose={closeMenu}\n              anchorOrigin={{\n                vertical: \"bottom\",\n                horizontal: \"center\",\n              }}\n              transformOrigin={{\n                vertical: \"top\",\n                horizontal: \"center\",\n              }}\n            >\n              <MenuItem onClick={handleConfigurationClick}>\n                <ListItemIcon>\n                  <SettingsIcon color=\"inherit\" />\n                </ListItemIcon>\n                Configuration\n              </MenuItem>\n              <MenuItem onClick={handleAboutClick}>\n                <ListItemIcon>\n                  <InfoIcon color=\"inherit\" />\n                </ListItemIcon>\n                About\n              </MenuItem>\n            </Menu>\n          </div>\n        </Toolbar>\n      </AppBar>\n      <Toolbar />\n    </>\n  );\n};\n\nexport default AppNav;\n","import React, { useState } from \"react\";\nimport { useNavigate, useParams, useLocation } from \"react-router-dom\";\n\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  IconButton,\n  Menu,\n  MenuItem,\n  ListItemIcon,\n} from \"@mui/material\";\n\nimport MenuOutlinedIcon from \"@mui/icons-material/MenuOutlined\";\nimport KeyboardArrowLeftOutlinedIcon from \"@mui/icons-material/KeyboardArrowLeftOutlined\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\n\nconst ListsNav = () => {\n  const params = useParams();\n  const navigate = useNavigate();\n  const { state } = useLocation();\n\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleOnReturn = () => {\n    navigate(-1);\n  };\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const closeMenu = () => setAnchorEl(null);\n\n  const handleOnEdit = () => {\n    closeMenu();\n    // open modal\n    // display edit list form\n    alert(`Edit List ${params.listId}`);\n  };\n\n  const handleOnDelete = () => {\n    closeMenu();\n    // open modal\n    // confirm delete action\n    alert(`Delete List ${params.listId}`);\n  };\n\n  console.log(\"@@ Todos nav render\");\n  console.log(state);\n\n  return (\n    <>\n      <AppBar position=\"fixed\">\n        <Toolbar sx={{ display: \"flex\", justifyContent: \"space-between\" }}>\n          <IconButton onClick={handleOnReturn} color=\"inherit\">\n            <KeyboardArrowLeftOutlinedIcon />\n          </IconButton>\n          <Typography variant=\"h6\" component=\"label\">\n            {state?.name || \"Task\"}\n          </Typography>\n          <div>\n            <IconButton onClick={handleMenu} color=\"inherit\">\n              <MenuOutlinedIcon />\n            </IconButton>\n            <Menu\n              anchorEl={anchorEl}\n              open={Boolean(anchorEl)}\n              onClose={closeMenu}\n              anchorOrigin={{\n                vertical: \"bottom\",\n                horizontal: \"center\",\n              }}\n              transformOrigin={{\n                vertical: \"top\",\n                horizontal: \"center\",\n              }}\n            >\n              <MenuItem onClick={handleOnEdit}>\n                <ListItemIcon>\n                  <EditIcon />\n                </ListItemIcon>\n                Edit\n              </MenuItem>\n              <MenuItem onClick={handleOnDelete}>\n                <ListItemIcon>\n                  <DeleteIcon />\n                </ListItemIcon>\n                Delete\n              </MenuItem>\n            </Menu>\n          </div>\n        </Toolbar>\n      </AppBar>\n      <Toolbar />\n    </>\n  );\n};\n\nexport default ListsNav;\n","import React from \"react\";\nimport { Outlet, useLocation } from \"react-router-dom\";\n\nimport AppNav from \"./components/AppNav\";\nimport TodosNav from \"./components/TodosNav\";\n\nconst App = () => {\n  const location = useLocation();\n  const isTodosPage = location.pathname.includes(\"/list/\");\n\n  console.log(\"@@ App render\");\n\n  return (\n    <>\n      {!isTodosPage ? <AppNav /> : <TodosNav />}\n      <Outlet />\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useMemo } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { Box, Typography, LinearProgress } from \"@mui/material\";\n\nimport CheckOutlinedIcon from \"@mui/icons-material/CheckOutlined\";\nimport CircleIcon from \"@mui/icons-material/Circle\";\n\nconst ListItem = ({ id, name, todos }) => {\n  const navigate = useNavigate();\n\n  const finishedTodos = useMemo(() => {\n    const length = todos.filter((t) => t.isDone).length;\n    const percentage = (length * 100) / todos.length;\n\n    return { length, percentage };\n  }, [todos]);\n\n  const handleOnClick = () => {\n    navigate(`/list/${id}`, { state: { id, name, todos } });\n  };\n\n  const renderCheckIcon = () => {\n    if (finishedTodos.length === todos.length && todos.length > 0)\n      return <CheckOutlinedIcon color=\"success\" />;\n\n    return <CircleIcon color=\"disabled\" />;\n  };\n\n  return (\n    <Box\n      onClick={handleOnClick}\n      bgcolor=\"lightskyblue\"\n      minWidth={110}\n      minHeight={140}\n      maxWidth={180}\n      maxHeight={220}\n      borderRadius={3}\n      padding={1}\n      display=\"flex\"\n      flexDirection=\"column\"\n      justifyContent=\"space-between\"\n    >\n      <Box alignSelf=\"flex-end\">{renderCheckIcon()}</Box>\n      <Typography fontSize={12}>{name?.toUpperCase()}</Typography>\n      <Box>\n        <Typography fontSize={12} marginBottom={1}>\n          Finished {finishedTodos.length} of {todos.length}\n        </Typography>\n        <LinearProgress\n          variant=\"determinate\"\n          value={finishedTodos.percentage || 0}\n        />\n      </Box>\n    </Box>\n  );\n};\n\nexport default ListItem;\n","import React, { useEffect } from \"react\";\n\nimport { Grid, Fab, Box } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport AddIcon from \"@mui/icons-material/Add\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getLists } from \"../redux/slices/lists\";\n\nimport ListItem from \"../components/ListItem\";\n\nconst useStyles = makeStyles((theme) => ({\n  fab: {\n    position: \"fixed\",\n    top: theme.spacing(6),\n    right: theme.spacing(1),\n  },\n}));\n\nconst ListsPage = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const lists = useSelector((store) => store.lists);\n\n  useEffect(() => {\n    dispatch(getLists({ page: 1, pageSize: 20 }));\n  }, [dispatch]);\n\n  const renderLists = () => {\n    const listItems = lists.items?.map((l) => (\n      <Grid\n        container\n        item\n        xs={6}\n        sm={4}\n        md={3}\n        lg={2}\n        justifyContent=\"center\"\n        key={l.id}\n      >\n        <ListItem name={l.name} id={l.id} todos={l.todos} />\n      </Grid>\n    ));\n\n    // TODO: handle when fetch is done and there are no lists\n\n    return listItems;\n  };\n\n  const handleOnAdd = () => {\n    console.log(\"Handle modal open\");\n  };\n\n  console.log(\"@@ Lists page render\");\n\n  return (\n    <Box>\n      {/* TODO: add loading component */}\n      {lists.loading && \"LOADING...\"}\n      <Grid container spacing={1} padding={1}>\n        {renderLists()}\n      </Grid>\n      <Box display=\"flex\" justifyContent=\"flex-end\">\n        <Fab onClick={handleOnAdd} color=\"primary\" className={classes.fab}>\n          <AddIcon />\n        </Fab>\n      </Box>\n    </Box>\n  );\n};\n\nexport default ListsPage;\n","import React from \"react\";\nimport { Grid, Typography } from \"@mui/material\";\nimport { useParams } from \"react-router\";\n\nconst TodosPage = () => {\n  const params = useParams();\n\n  console.log(\"@@ Todos page render\");\n\n  return (\n    <Grid>\n      <Typography variant=\"h4\" component=\"h2\">\n        Todos from list {params.listId}\n      </Typography>\n    </Grid>\n  );\n};\n\nexport default TodosPage;\n","import React from \"react\";\n// TODO: mui components\n\nconst NotFoundPage = () => (\n  <article>\n    <h2>Section not found 404</h2>\n    <p>This page does not exist</p>\n  </article>\n);\n\nexport default NotFoundPage;\n","import React from \"react\";\n\nimport { Box } from \"@mui/material\";\n\nconst AboutPage = () => {\n  return <Box>Made with ❤️</Box>;\n};\n\nexport default AboutPage;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Box,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  FormControlLabel,\n  Switch,\n  Typography,\n} from \"@mui/material\";\nimport { ModeEdit, DarkMode } from \"@mui/icons-material\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setConfiguration } from \"../redux/actions/configuration\";\n\nconst ConfigurationPage = () => {\n  const dispatch = useDispatch();\n  const appConfig = useSelector((store) => store.configuration);\n  const { themes, languages, theme, language } = appConfig;\n\n  const [modalOpen, setModalOpen] = useState(false);\n  const [inputs, setInputs] = useState({\n    theme,\n    language,\n    isDarkMode: theme.palette.type === \"dark\",\n  });\n\n  useEffect(() => {\n    // fetch app themes and languages to populate Selects\n    // dispatch(getOptions());\n  }, []);\n\n  // effect for theme and dark mode changing\n  // update theme\n  useEffect(() => {\n    console.log(\"$$ effect by changing inputs\");\n    dispatch(setConfiguration(inputs));\n  }, [dispatch, inputs]);\n\n  const closeModal = () => setModalOpen(false);\n\n  const handleSelectChange = ({ target }, { items }) => {\n    const value = items.find((t) => t.id === target.value);\n    setInputs({ ...inputs, [target.name]: value });\n  };\n\n  const handleDarkMode = ({ target }) =>\n    setInputs({ ...inputs, isDarkMode: target.checked });\n\n  const handleOnSubmit = () => closeModal();\n\n  console.log(\"@@ Config page render\");\n\n  return (\n    <Box p={1}>\n      <Box display=\"flex\" justifyContent=\"flex-end\">\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          startIcon={<ModeEdit />}\n          onClick={() => setModalOpen(true)}\n        >\n          Change\n        </Button>\n      </Box>\n      <Box display=\"flex\" flexDirection=\"column\">\n        <Typography component=\"h2\" variant=\"h6\">\n          You can change the theme and app language here\n        </Typography>\n        <Typography component=\"label\" variant=\"label\">\n          Theme: {inputs.theme.name}\n        </Typography>\n        <Typography component=\"label\" variant=\"label\">\n          Language: {inputs.language.name}\n        </Typography>\n      </Box>\n      <Dialog open={modalOpen} maxWidth=\"xs\">\n        <DialogTitle>Update Settings</DialogTitle>\n        <DialogContent dividers>\n          <Box display=\"flex\" flexDirection=\"column\">\n            <FormControl margin=\"dense\">\n              <InputLabel id=\"languageId\">Language</InputLabel>\n              <Select\n                labelId=\"languageId\"\n                label=\"Language\"\n                name=\"language\"\n                value={inputs.language.id}\n                onChange={(e) => handleSelectChange(e, languages)}\n              >\n                {languages.items.map((l) => (\n                  <MenuItem key={l.id} value={l.id}>\n                    {l.name}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            <FormControl margin=\"dense\">\n              <InputLabel id=\"themeId\">Theme</InputLabel>\n              <Select\n                labelId=\"themeId\"\n                label=\"Theme\"\n                name=\"theme\"\n                value={inputs.theme.id}\n                onChange={(e) => handleSelectChange(e, themes)}\n              >\n                {themes.items.map((t) => (\n                  <MenuItem key={t.id} value={t.id}>\n                    {t.name}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            <Box display=\"flex\" alignItems=\"center\">\n              <FormControlLabel\n                label=\"Dark mode\"\n                control={\n                  <Switch\n                    checked={inputs.isDarkMode}\n                    onChange={handleDarkMode}\n                  />\n                }\n              />\n              {(inputs.isDarkMode && <DarkMode color=\"primary\" />) || (\n                <DarkMode color=\"disabled\" />\n              )}\n            </Box>\n          </Box>\n        </DialogContent>\n        <DialogActions\n          sx={{ display: \"flex\", justifyContent: \"space-between\" }}\n        >\n          <Button color=\"secondary\" variant=\"text\" onClick={closeModal}>\n            Cancel\n          </Button>\n          <Button color=\"primary\" variant=\"contained\" onClick={handleOnSubmit}>\n            Ok\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n};\n\nexport default ConfigurationPage;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n// import PrivateRoute from './components/PrivateRoute';\n\n// redux store\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nimport Themed from \"./components/Themed\";\nimport { CssBaseline } from \"@mui/material\";\n\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport ListsPage from \"./pages/ListsPage\";\nimport TodosPage from \"./pages/TodosPage\";\nimport NotFoundPage from \"./pages/NotFoundPage\";\nimport AboutPage from \"./pages/AboutPage\";\nimport ConfigurationPage from \"./pages/ConfigurationPage\";\n\nconsole.log(\"# env variables\");\nconsole.log(process.env);\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <Themed>\n        <CssBaseline />\n        <BrowserRouter basename={process.env.REACT_APP_NAME}>\n          <Routes>\n            <Route path=\"/\" element={<App />}>\n              <Route index element={<ListsPage />} />\n              <Route path=\"list/:listId\" element={<TodosPage />} />\n              <Route path=\"about\" element={<AboutPage />} />\n              <Route path=\"configuration\" element={<ConfigurationPage />} />\n              {/* Login, Register */}\n            </Route>\n            <Route path=\"*\" element={<NotFoundPage />} />\n          </Routes>\n        </BrowserRouter>\n      </Themed>\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}