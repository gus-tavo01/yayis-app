{"version":3,"sources":["api/todosApi.js","services/themesService.js","constants/defaults.js","redux/slices/themes.js","services/languagesService.js","redux/slices/languages.js","services/listsService.js","redux/slices/lists.js","redux/slices/configuration.js","redux/slices/alerts.js","services/authService.js","services/usersService.js","redux/slices/auth.js","redux/configureStore.js","hooks/useConfiguration.js","components/Themed.js","logo.svg","hooks/useAuth.js","hooks/useToast.js","components/AppNav.js","components/ToastBar.js","App.js","reportWebVitals.js","components/ListItem.js","components/modals/AddListModal.js","pages/ListsPage.js","components/modals/UpdateTodoModal.js","components/modals/ViewTodoModal.js","components/TodoItem.js","components/modals/AddTodoModal.js","components/modals/DeleteListModal.js","components/modals/UpdateListModal.js","components/ExportableList.js","constants/imageFormats.js","components/modals/CreateImageModal.js","components/TodosNav.js","pages/TodosPage.js","pages/NotFoundPage.js","pages/AboutPage.js","components/modals/UpdateConfigurationModal.js","pages/ConfigurationPage.js","components/LoginForm.js","pages/LoginPage.js","index.js"],"names":["api","axios","create","baseURL","process","headers","interceptors","response","use","data","error","errorPayload","errorMessage","toJSON","message","get","params","a","todosApi","themesService","theme","code","name","palette","type","primary","main","colors","purple","A700","text","secondary","lightBlue","A200","defaults","language","pwdMinLength","fetchThemes","createAsyncThunk","dispatch","getState","setLoading","navigator","onLine","payload","themesSlice","createSlice","initialState","loading","items","reducers","state","action","extraReducers","fulfilled","docs","actions","todosService","fetchLanguages","languagesService","languagesSlice","userId","list","post","remove","listId","delete","update","patch","listsService","setToken","token","common","Authorization","fetchUserLists","user","auth","localStorage","getItem","id","createList","uuid","updateList","updatedList","removeList","createTodo","todoData","updateTodo","todoId","removeTodo","listsSlice","clearLists","push","map","l","filter","newTodo","find","todos","li","t","updateConfiguration","configurationSlice","setConfig","clearConfig","alertsSlice","toast","isOpen","severity","slide","openAlert","closeAlert","login","credentials","authService","usersService","statusMessage","setError","setItem","getUserParams","email","getProfileResponse","configuration","logout","setAlertsLoading","removeItem","authSlice","setStore","rootReducer","combineReducers","languages","languagesReducer","themes","themesReducer","configurationReducer","lists","listsReducer","alerts","alertsReducer","authReducer","persistConfig","key","storage","version","persistedReducer","persistReducer","store","configureStore","reducer","devTools","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","useConfiguration","useSelector","appConfig","Themed","children","appTheme","createTheme","ThemeProvider","useAuth","useToast","useDispatch","success","info","warning","useStyles","makeStyles","link","textDecoration","color","AppNav","classes","useState","anchorEl","setAnchorEl","navigate","useNavigate","location","useLocation","closeMenu","AppBar","position","Toolbar","sx","display","justifyContent","Typography","variant","component","className","title","to","Avatar","src","logoSrc","alt","pageName","IconButton","onClick","event","currentTarget","Menu","open","Boolean","onClose","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","ListItemIcon","Divider","ToastBar","currentBar","handleOnClose","e","reason","Snackbar","autoHideDuration","bottom","xs","sm","TransitionComponent","props","Slide","direction","Alert","App","appLoading","isTodosPage","pathname","includes","console","log","LinearProgress","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ListItem","finishedTodos","useMemo","length","isDone","percentage","Box","bgcolor","minWidth","minHeight","maxWidth","maxHeight","borderRadius","padding","flexDirection","alignSelf","fontSize","toUpperCase","marginBottom","value","AddListModal","onCancel","onSubmit","listName","setListName","handleOnSubmit","preventDefault","Dialog","DialogTitle","DialogContent","dividers","InputLabel","required","TextField","placeholder","onChange","target","autoFocus","DialogActions","Button","fab","right","spacing","ListsPage","modalOpen","setModalOpen","useEffect","Grid","container","item","md","lg","renderLists","Fab","UpdateTodoModal","todo","description","inputs","setInputs","handleOnChange","multiline","ViewTodoModal","fullWidth","DialogContentText","style","whiteSpace","alignItems","backgroundColor","margin","TodoItem","onUpdate","onDelete","updateTodoOpen","setUpdateTodoOpen","viewTodoOpen","setViewTodoOpen","Checkbox","checked","AddTodoModal","hiddenDescription","setHiddenDescription","resetForm","marginTop","DeleteListModal","UpdateListModal","defaultProps","root","width","header","paddingLeft","nameChecked","ExportableList","React","forwardRef","ref","removeFinished","Paper","i","imageFormats","png","svg","jpeg","CreateImageModal","format","setFormat","setIncludeFinished","nodeRef","createRef","FormControl","Select","label","labelId","Object","keys","f","FormControlLabel","labelPlacement","control","textAlign","current","ListsNav","deleteListOpen","setDeleteListOpen","updateListOpen","setUpdateListOpen","createImgOpen","setCreateImgOpen","handleOnCreateImg","imageType","fileName","html2canvas","canvas","download","toDataURL","TodosPage","useParams","currentList","listsLoading","addTodoOpen","setAddTodoOpen","handleOnUpdate","hasOwnProperty","handleOnDelete","TodosNav","p","NotFoundPage","AboutPage","UpdateConfigurationModal","onlanguagechange","onThemeChange","disabled","selected","ConfigurationPage","updated","setUpdated","updateModalOpen","Stack","size","startIcon","CircularProgress","ModeEdit","selectedTheme","onLanguageChange","selectedLanguage","formContainer","initialValue","helperText","LoginForm","onEmailBlur","onPwdBlur","setEmail","pwd","setPwd","submitIsDisabled","password","onBlur","marginY","LoginPage","formValues","validator","isEmail","isLength","min","ReactDOM","render","StrictMode","CssBaseline","basename","path","element","index","document","getElementById"],"mappings":"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","file":"static/js/main.53bd4ad7.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst successCb = (response) => response.data;\nconst errorCb = (error) => {\n  const errorPayload = {\n    errorMessage: error.toJSON().message,\n  };\n\n  return error.response?.data || errorPayload;\n};\n\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_TODOS_API_URL,\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\napi.interceptors.response.use(successCb, errorCb);\n\nexport default api;\n","import todosApi from \"../api/todosApi\";\n\nexport const get = async (params) => todosApi.get(\"/v1/themes\", { params });\n\nconst themesService = { get };\n\nexport default themesService;\n","import { colors } from \"@mui/material\";\n\nexport const theme = {\n  code: \"T_DEF\",\n  name: \"Default theme\",\n  palette: {\n    type: \"light\",\n    primary: {\n      main: colors.purple.A700,\n      text: \"white\",\n    },\n    secondary: {\n      main: colors.lightBlue.A200,\n      text: \"black\",\n    },\n  },\n};\n\nexport const language = { code: \"L_SPA\", name: \"Español\" };\n\nexport const pwdMinLength = 6;\n\nconst defaults = { language, theme, pwdMinLength };\n\nexport default defaults;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport themesService from \"../../services/themesService\";\n\nimport defaults from \"../../constants/defaults\";\n\n// async actions\nexport const fetchThemes = createAsyncThunk(\n  \"themes/fetch\",\n  async (params, { dispatch, getState }) => {\n    dispatch(setLoading(true));\n    const response = await themesService.get(params);\n    dispatch(setLoading(false));\n\n    if (!navigator.onLine || response.errorMessage === \"Network Error\")\n      return null;\n\n    // TODO:\n    // const translatedMessage;\n    // if (response.errorMessage) {}\n    // dispatch(setMessage(translatedMessage));\n\n    return response?.payload;\n  }\n);\n\nconst themesSlice = createSlice({\n  name: \"themes\",\n  initialState: {\n    loading: false,\n    items: [defaults.theme],\n  },\n  reducers: {\n    setLoading: (state, action) => {\n      state.loading = action.payload;\n    },\n  },\n  extraReducers: {\n    [fetchThemes.fulfilled]: (state, action) => {\n      if (action.payload) {\n        state.items = action.payload.docs;\n      }\n    },\n  },\n});\n\nexport const { setLoading } = themesSlice.actions;\nexport default themesSlice.reducer;\n","import todosApi from \"../api/todosApi\";\n\nexport const get = (params) => todosApi.get(\"/v1/languages\", { params });\n\nconst todosService = { get };\n\nexport default todosService;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport languagesService from \"../../services/languagesService\";\n\nimport defaults from \"../../constants/defaults\";\n\n// async actions\nexport const fetchLanguages = createAsyncThunk(\n  \"languages/fetch\",\n  async (params, { dispatch }) => {\n    dispatch(setLoading(true));\n    const response = await languagesService.get(params);\n    dispatch(setLoading(false));\n\n    if (!navigator.onLine || response.errorMessage === \"Network Error\")\n      return null;\n\n    // TODO:\n    // const translatedMessage;\n    // if response.errorMessage -> dispatch(setMessage(translatedMessage));\n\n    return response?.payload;\n  }\n);\n\nconst languagesSlice = createSlice({\n  name: \"languages\",\n  initialState: {\n    loading: false,\n    items: [defaults.language],\n  },\n  reducers: {\n    setLoading: (state, action) => {\n      state.loading = action.payload;\n    },\n  },\n  extraReducers: {\n    [fetchLanguages.fulfilled]: (state, action) => {\n      if (action.payload) {\n        state.items = action.payload.docs;\n      }\n    },\n  },\n});\n\nexport const { setLoading } = languagesSlice.actions;\nexport default languagesSlice.reducer;\n","import todosApi from \"../api/todosApi\";\n\nexport const setToken = (token) => {\n  todosApi.defaults.headers.common.Authorization = `Bearer ${token}`;\n};\n\nexport const get = async (userId, params) => {\n  return todosApi.get(`/v1/users/${userId}/lists`, {\n    params,\n  });\n};\n\nexport const create = async (userId, list) => {\n  return todosApi.post(`/v1/users/${userId}/lists`, list);\n};\n\nexport const remove = async (userId, listId) => {\n  return todosApi.delete(`/v1/users/${userId}/lists/${listId}`);\n};\n\nexport const update = async (userId, listId, list) => {\n  return todosApi.patch(`/v1/users/${userId}/lists/${listId}`, list);\n};\n\nconst listsService = { get, create, update, remove, setToken };\n\nexport default listsService;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n\nimport { v4 as uuid } from \"uuid\";\nimport listsService from \"../../services/listsService\";\n\nexport const fetchUserLists = createAsyncThunk(\n  \"lists/fetch\",\n  async (params, { dispatch, getState }) => {\n    const {\n      auth: { user },\n    } = getState();\n\n    dispatch(setLoading(true));\n    const token = localStorage.getItem(\"authToken\");\n    listsService.setToken(token);\n\n    const response = await listsService.get(user.id, params);\n    return response?.payload;\n  }\n);\n\nexport const createList = createAsyncThunk(\n  \"lists/create\",\n  async (list, { dispatch, getState }) => {\n    const {\n      auth: { user },\n    } = getState();\n    dispatch(setLoading(true));\n\n    if (user) {\n      const response = await listsService.create(user.id, list);\n      return response?.payload;\n    }\n\n    return { ...list, id: uuid() };\n  }\n);\n\nexport const updateList = createAsyncThunk(\n  \"lists/update\",\n  async (updatedList, { dispatch, getState }) => {\n    const {\n      auth: { user },\n    } = getState();\n\n    if (user) {\n      dispatch(setLoading(true));\n      const response = await listsService.update(\n        user.id,\n        updatedList.id,\n        updatedList\n      );\n      dispatch(setLoading(false));\n      return response?.payload;\n    }\n\n    return updatedList;\n  }\n);\n\nexport const removeList = createAsyncThunk(\n  \"lists/remove\",\n  async (listId, { dispatch, getState }) => {\n    const {\n      auth: { user },\n    } = getState();\n\n    if (user) {\n      dispatch(setLoading(true));\n      const response = await listsService.remove(user.id, listId);\n      dispatch(setLoading(false));\n\n      return response?.payload;\n    }\n\n    return listId;\n  }\n);\n\n// #region Todos\nexport const createTodo = createAsyncThunk(\n  \"todos/create\",\n  async (todoData, { dispatch, getState }) => {\n    const { auth } = getState();\n\n    if (auth.user) {\n      // const { listId, ...todo } = todoData;\n      dispatch(setLoading(true));\n      // response = service.method(listId, todo);\n      dispatch(setLoading(false));\n      // return { ...response?.payload, listId };\n    }\n\n    return { ...todoData, id: uuid() };\n  }\n);\nexport const updateTodo = createAsyncThunk(\n  \"todos/update\",\n  async (todoData, { dispatch, getState }) => {\n    const { auth } = getState();\n\n    if (auth.user) {\n      dispatch(setLoading(true));\n      // const response = service.method(listId, todoId, update);\n      dispatch(setLoading(false));\n      // return { ...response, listId };\n    }\n    const updateTodo = { ...todoData };\n    updateTodo.id = updateTodo.todoId;\n    delete updateTodo.todoId;\n\n    return updateTodo;\n  }\n);\nexport const removeTodo = createAsyncThunk(\n  \"todos/remove\",\n  async (todoData, { dispatch, getState }) => {\n    const { auth } = getState();\n\n    if (auth.user) {\n      // const { listId, todoId } = todoData;\n      dispatch(setLoading(true));\n      // service.method(listId, todoId);\n      dispatch(setLoading(false));\n    }\n    return todoData;\n  }\n);\n// #endregion Todos\n\nconst listsSlice = createSlice({\n  name: \"lists\",\n  initialState: { loading: false, items: [] },\n  reducers: {\n    setLoading: (state, action) => {\n      state.loading = action.payload;\n    },\n    clearLists: (state) => {\n      state.items = [];\n      state.loading = false;\n    },\n  },\n  extraReducers: {\n    [createList.fulfilled]: (state, action) => {\n      state.items.push(action.payload);\n      state.loading = false;\n    },\n    [fetchUserLists.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.items = action.payload?.docs || [];\n    },\n    [updateList.fulfilled]: (state, action) => {\n      state.items = state.items.map((l) => {\n        if (l.id === action.payload.id) {\n          return { ...l, ...action.payload };\n        }\n        return l;\n      });\n    },\n    [removeList.fulfilled]: (state, action) => {\n      state.items = state.items.filter((l) => l.id !== action.payload);\n    },\n    [createTodo.fulfilled]: (state, action) => {\n      const { listId, ...newTodo } = action.payload;\n      const list = state.items.find((list) => list.id === listId);\n      if (list.todos) list.todos.push(newTodo);\n      else list.todos = [newTodo];\n    },\n    [updateTodo.fulfilled]: (state, action) => {\n      const { listId, ...newTodo } = action.payload;\n      const list = state.items.find((li) => li.id === listId);\n\n      list.todos = list.todos.map((t) => {\n        if (t.id === newTodo.id) return { ...t, ...newTodo };\n        return t;\n      });\n    },\n    [removeTodo.fulfilled]: (state, action) => {\n      const { listId, todoId } = action.payload;\n      const list = state.items.find((li) => li.id === listId);\n\n      list.todos = list.todos.filter((t) => t.id !== todoId);\n    },\n  },\n});\n\nexport const { setLoading, clearLists } = listsSlice.actions;\nexport default listsSlice.reducer;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n\nimport defaults from \"../../constants/defaults\";\n\nexport const updateConfiguration = createAsyncThunk(\n  \"configuration/update\",\n  async (update, { dispatch, getState }) => {\n    const { auth } = getState();\n    if (auth.user) {\n      dispatch(setLoading(true));\n      // service.update(user.id, update);\n      dispatch(setLoading(false));\n      // return response?.payload;\n    }\n\n    return update;\n  }\n);\n\nconst configurationSlice = createSlice({\n  name: \"configuration\",\n  initialState: {\n    loading: false,\n    language: defaults.language,\n    theme: defaults.theme,\n  },\n  reducers: {\n    setLoading: (state, action) => {\n      state.loading = action.payload;\n    },\n    setConfig: (state, action) => {\n      const { payload } = action;\n\n      state.loading = false;\n      state.language = payload?.language || defaults.language;\n      state.theme = payload?.theme || defaults.theme;\n    },\n    clearConfig: (state) => {\n      state.loading = false;\n      state.language = defaults.language;\n      state.theme = defaults.theme;\n    },\n  },\n  extraReducers: {\n    [updateConfiguration.fulfilled]: (state, { payload }) => {\n      if (payload.theme) state.theme = payload.theme;\n      if (payload.language) state.language = payload.language;\n    },\n  },\n});\n\nexport const { setLoading, setConfig, clearConfig } =\n  configurationSlice.actions;\nexport default configurationSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst alertsSlice = createSlice({\n  name: \"alerts\",\n  initialState: {\n    loading: false,\n    toast: {\n      isOpen: false,\n      message: null,\n      severity: \"info\",\n      slide: \"left\",\n    },\n  },\n  reducers: {\n    setLoading: (state, { payload }) => {\n      state.loading = payload;\n    },\n    openAlert: (state, { payload }) => {\n      state.toast = {\n        isOpen: true,\n        severity: payload.severity,\n        message: payload.message,\n      };\n    },\n    closeAlert: (state) => {\n      state.toast = { isOpen: false, severity: \"info\", message: null };\n    },\n  },\n});\n\nexport const { openAlert, closeAlert, setLoading } = alertsSlice.actions;\nexport default alertsSlice.reducer;\n","import todosApi from \"../api/todosApi\";\n\nexport const login = async (credentials) =>\n  todosApi.post(`/v1/users/login`, credentials);\n\nconst authService = { login };\n\nexport default authService;\n","import todosApi from \"../api/todosApi\";\n\nexport const setToken = (token) => {\n  todosApi.defaults.headers.common.Authorization = `Bearer ${token}`;\n};\n\nexport const get = async (params) => todosApi.get(`/v1/users`, { params });\n\nexport const create = async () => {};\n\nexport const remove = async () => {};\n\nexport const update = async () => {};\n\nconst usersService = { create, remove, update, get, setToken };\n\nexport default usersService;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport authService from \"../../services/authService\";\nimport usersService from \"../../services/usersService\";\n\nimport { setLoading as setAlertsLoading } from \"./alerts\";\nimport { clearLists } from \"./lists\";\nimport { clearConfig, setConfig } from \"./configuration\";\n\nexport const login = createAsyncThunk(\n  \"auth/login\",\n  async (credentials, { dispatch }) => {\n    dispatch(setLoading(true));\n    const response = await authService.login(credentials);\n\n    if (response.statusMessage === \"Unauthorized\") {\n      dispatch(setError(\"El correo o la contraseña no son validos.\"));\n      return null;\n    }\n\n    if (response.errorMessage) {\n      dispatch(setError(\"Algo salio mal, vuelve a intentarlo mas tarde\"));\n      return null;\n    }\n\n    const { token } = response?.payload;\n    localStorage.setItem(\"authToken\", token);\n    usersService.setToken(token);\n\n    const getUserParams = { email: credentials.email };\n    const getProfileResponse = await usersService.get(getUserParams);\n\n    if (getProfileResponse.errorMessage) {\n      dispatch(setError(\"Algo salio mal, vuelve a intentarlo mas tarde\"));\n      return null;\n    }\n\n    const [user = null] = getProfileResponse.payload?.docs;\n\n    dispatch(setConfig(user?.configuration));\n\n    return user;\n  }\n);\n\nexport const logout = createAsyncThunk(\n  \"auth/logout\",\n  async (logout, { dispatch }) => {\n    dispatch(setAlertsLoading(true));\n    localStorage.removeItem(\"authToken\");\n\n    dispatch(clearLists());\n    dispatch(clearConfig());\n    dispatch(setAlertsLoading(false));\n  }\n);\n\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: {\n    loading: false,\n    user: null,\n    error: null,\n  },\n  reducers: {\n    setLoading: (state, action) => {\n      state.loading = action.payload;\n    },\n    setError: (state, action) => {\n      state.error = action.payload;\n    },\n  },\n  extraReducers: {\n    [login.fulfilled]: (state, action) => {\n      state.user = action.payload;\n      state.loading = false;\n    },\n    [logout.fulfilled]: (state) => {\n      state.user = null;\n    },\n  },\n});\n\nexport const { setLoading, setError } = authSlice.actions;\nexport default authSlice.reducer;\n","import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\n\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nimport themesReducer from \"./slices/themes\";\nimport languagesReducer from \"./slices/languages\";\nimport listsReducer from \"./slices/lists\";\nimport configurationReducer from \"./slices/configuration\";\nimport alertsReducer from \"./slices/alerts\";\nimport authReducer from \"./slices/auth\";\n\nconst setStore = () => {\n  const rootReducer = combineReducers({\n    languages: languagesReducer,\n    themes: themesReducer,\n    configuration: configurationReducer,\n    lists: listsReducer,\n    alerts: alertsReducer,\n    auth: authReducer,\n  });\n\n  const persistConfig = {\n    key: \"root\",\n    storage,\n    version: 1,\n  };\n\n  const persistedReducer = persistReducer(persistConfig, rootReducer);\n\n  const store = configureStore({\n    reducer: persistedReducer,\n    devTools: true,\n    middleware: (getDefaultMiddleware) =>\n      getDefaultMiddleware({\n        serializableCheck: {\n          ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n        },\n      }),\n  });\n  const persistor = persistStore(store);\n\n  return { store, persistor };\n};\n\nexport default setStore;\n","import { useSelector } from \"react-redux\";\n\nconst useConfiguration = () => {\n  const { user } = useSelector((store) => store.auth);\n  const appConfig = useSelector((store) => store.configuration);\n\n  return user?.configuration || appConfig;\n};\n\nexport default useConfiguration;\n","import { ThemeProvider, createTheme } from \"@mui/material/styles\";\nimport useConfiguration from \"../hooks/useConfiguration\";\n\nconst Themed = ({ children }) => {\n  const { theme } = useConfiguration();\n  const appTheme = createTheme(theme);\n  return <ThemeProvider theme={appTheme}>{children}</ThemeProvider>;\n};\n\nexport default Themed;\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { useSelector } from \"react-redux\";\n\nconst useAuth = () => {\n  const auth = useSelector((store) => store.auth);\n  return auth;\n};\n\nexport default useAuth;\n","import { useDispatch } from \"react-redux\";\nimport { openAlert } from \"../redux/slices/alerts\";\n\nconst useToast = () => {\n  const dispatch = useDispatch();\n\n  const success = (message) => {\n    dispatch(openAlert({ severity: \"success\", message }));\n  };\n\n  const info = (message) => {\n    dispatch(openAlert({ severity: \"info\", message }));\n  };\n\n  const warning = (message) => {\n    dispatch(openAlert({ severity: \"warning\", message }));\n  };\n\n  const error = (message) => {\n    dispatch(openAlert({ severity: \"error\", message }));\n  };\n\n  return { success, info, warning, error };\n};\n\nexport default useToast;\n","import React, { useState } from \"react\";\nimport { Link, useNavigate, useLocation } from \"react-router-dom\";\n\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  IconButton,\n  Menu,\n  MenuItem,\n  ListItemIcon,\n  Avatar,\n  Divider,\n} from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport MenuOutlinedIcon from \"@mui/icons-material/MenuOutlined\";\nimport InfoIcon from \"@mui/icons-material/Info\";\nimport SettingsIcon from \"@mui/icons-material/Settings\";\nimport PersonIcon from \"@mui/icons-material/Person\";\nimport PersonOutlineIcon from \"@mui/icons-material/PersonOutline\";\n\nimport logoSrc from \"../logo.svg\";\n\nimport useAuth from \"../hooks/useAuth\";\nimport { useDispatch } from \"react-redux\";\nimport useToast from \"../hooks/useToast\";\n\nimport { logout } from \"../redux/slices/auth\";\n\nconst useStyles = makeStyles(() => ({\n  link: {\n    textDecoration: \"none\",\n    color: \"inherit\",\n  },\n}));\n\nconst AppNav = () => {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const auth = useAuth();\n  const toast = useToast();\n\n  const handleMenu = (event) => setAnchorEl(event.currentTarget);\n\n  const closeMenu = () => setAnchorEl(null);\n\n  const handleLoginClick = () => {\n    closeMenu();\n    navigate(\"/login\", { state: { pageName: \"Iniciar sesion\" } });\n  };\n\n  const handleConfigurationClick = () => {\n    closeMenu();\n    navigate(\"/configuration\", { state: { pageName: \"Configuracion\" } });\n  };\n\n  const handleAboutClick = () => {\n    closeMenu();\n    navigate(\"/about\", { state: { pageName: \"Acerca de\" } });\n  };\n\n  const handleLogoutClick = () => {\n    closeMenu();\n    dispatch(logout());\n    navigate(\"/login\", { state: { pageName: \"Iniciar sesion\" } });\n    toast.info(\"Se ha cerrado la sesion\");\n  };\n\n  return (\n    <>\n      <AppBar position=\"fixed\">\n        <Toolbar sx={{ display: \"flex\", justifyContent: \"space-between\" }}>\n          <Typography variant=\"h6\" component=\"label\" className={classes.title}>\n            <Link className={classes.link} to=\"/\">\n              <Avatar src={logoSrc} alt=\"Todo App\" />\n            </Link>\n          </Typography>\n          <Typography variant=\"h6\" component=\"label\">\n            {location.state?.pageName || \"Mis listas\"}\n          </Typography>\n          <div>\n            <IconButton onClick={handleMenu} color=\"inherit\">\n              <MenuOutlinedIcon />\n            </IconButton>\n            <Menu\n              anchorEl={anchorEl}\n              open={Boolean(anchorEl)}\n              onClose={closeMenu}\n              anchorOrigin={{\n                vertical: \"bottom\",\n                horizontal: \"center\",\n              }}\n              transformOrigin={{\n                vertical: \"top\",\n                horizontal: \"center\",\n              }}\n            >\n              {!auth.user && (\n                <MenuItem onClick={handleLoginClick}>\n                  <ListItemIcon>\n                    <PersonIcon color=\"inherit\" />\n                  </ListItemIcon>\n                  Login\n                </MenuItem>\n              )}\n              <MenuItem onClick={handleConfigurationClick}>\n                <ListItemIcon>\n                  <SettingsIcon color=\"inherit\" />\n                </ListItemIcon>\n                Configuracion\n              </MenuItem>\n              <MenuItem onClick={handleAboutClick}>\n                <ListItemIcon>\n                  <InfoIcon color=\"inherit\" />\n                </ListItemIcon>\n                Acerca de\n              </MenuItem>\n              {auth.user && <Divider />}\n              {auth.user && (\n                <MenuItem onClick={handleLogoutClick}>\n                  <ListItemIcon>\n                    <PersonOutlineIcon color=\"inherit\" />\n                  </ListItemIcon>\n                  Logout\n                </MenuItem>\n              )}\n            </Menu>\n          </div>\n        </Toolbar>\n      </AppBar>\n      <Toolbar />\n    </>\n  );\n};\n\nexport default AppNav;\n","import React from \"react\";\n\nimport { Snackbar, Alert, Slide } from \"@mui/material\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { closeAlert } from \"../redux/slices/alerts\";\n\nconst ToastBar = () => {\n  const dispatch = useDispatch();\n  const currentBar = useSelector((store) => store.alerts.toast);\n\n  const handleOnClose = (e, reason) => {\n    if (reason !== \"clickaway\") {\n      dispatch(closeAlert());\n    }\n  };\n\n  return (\n    <Snackbar\n      open={currentBar.isOpen}\n      onClose={handleOnClose}\n      autoHideDuration={2500}\n      sx={{ bottom: { xs: 90, sm: 0 } }}\n      TransitionComponent={(props) => (\n        <Slide {...props} direction={currentBar.slide} />\n      )}\n    >\n      <Alert severity={currentBar.severity} onClose={handleOnClose}>\n        {currentBar.message}\n      </Alert>\n    </Snackbar>\n  );\n};\n\nexport default ToastBar;\n","import React from \"react\";\nimport { Outlet, useLocation } from \"react-router-dom\";\n\nimport AppNav from \"./components/AppNav\";\nimport ToastBar from \"./components/ToastBar\";\nimport { LinearProgress } from \"@mui/material\";\n\nimport { useSelector } from \"react-redux\";\n\nconst App = () => {\n  const location = useLocation();\n  const appLoading = useSelector((store) => store.alerts.loading);\n  const isTodosPage = location.pathname.includes(\"/list/\");\n\n  console.log(\"@@ App render\");\n\n  return (\n    <>\n      {!isTodosPage && <AppNav />}\n      {appLoading && <LinearProgress color=\"secondary\" />}\n      <Outlet />\n      <ToastBar />\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useMemo } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { Box, Typography, LinearProgress } from \"@mui/material\";\n\nimport CheckOutlinedIcon from \"@mui/icons-material/CheckOutlined\";\nimport CircleIcon from \"@mui/icons-material/Circle\";\n\nconst ListItem = ({ id, name, todos }) => {\n  const navigate = useNavigate();\n\n  const finishedTodos = useMemo(() => {\n    const length = todos.filter((t) => t.isDone).length;\n    const percentage = (length * 100) / todos.length;\n\n    return { length, percentage };\n  }, [todos]);\n\n  const handleOnClick = () => {\n    navigate(`/list/${id}`, { state: { id, name, todos } });\n  };\n\n  const renderCheckIcon = () => {\n    if (finishedTodos.length === todos.length && todos.length > 0)\n      return <CheckOutlinedIcon color=\"success\" />;\n\n    return <CircleIcon color=\"disabled\" />;\n  };\n\n  return (\n    <Box\n      onClick={handleOnClick}\n      bgcolor=\"lightskyblue\"\n      minWidth={110}\n      minHeight={140}\n      maxWidth={180}\n      maxHeight={220}\n      borderRadius={3}\n      padding={1}\n      display=\"flex\"\n      flexDirection=\"column\"\n      justifyContent=\"space-between\"\n    >\n      <Box alignSelf=\"flex-end\">{renderCheckIcon()}</Box>\n      <Typography fontSize={12}>{name?.toUpperCase()}</Typography>\n      <Box>\n        <Typography fontSize={12} marginBottom={1}>\n          Terminados {finishedTodos.length} de {todos.length}\n        </Typography>\n        <LinearProgress\n          variant=\"determinate\"\n          value={finishedTodos.percentage || 0}\n        />\n      </Box>\n    </Box>\n  );\n};\n\nexport default ListItem;\n","import React, { useState } from \"react\";\n\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  InputLabel,\n  TextField,\n} from \"@mui/material\";\n\nconst AddListModal = ({ open, onCancel, onSubmit }) => {\n  const [listName, setListName] = useState(\"\");\n\n  const handleOnChange = ({ target }) => {\n    setListName(target.value);\n  };\n\n  const handleOnCancel = () => {\n    setListName(\"\");\n    onCancel();\n  };\n\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n    onSubmit({ name: listName });\n    setListName(\"\");\n  };\n\n  return (\n    <Dialog open={open}>\n      <DialogTitle>Crear una nueva lista</DialogTitle>\n      <DialogContent dividers>\n        <form onSubmit={handleOnSubmit}>\n          <InputLabel required>Nombre</InputLabel>\n          <TextField\n            name=\"name\"\n            placeholder=\"Nombre de la lista\"\n            onChange={handleOnChange}\n            value={listName}\n            variant=\"outlined\"\n            autoFocus\n          />\n        </form>\n      </DialogContent>\n      <DialogActions sx={{ display: \"flex\", justifyContent: \"space-between\" }}>\n        <Button onClick={handleOnCancel} color=\"secondary\" variant=\"outlined\">\n          Cancelar\n        </Button>\n        <Button onClick={handleOnSubmit} color=\"primary\" variant=\"contained\">\n          Crear\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default AddListModal;\n","import React, { useEffect, useState } from \"react\";\n\nimport { Grid, Fab, Box, LinearProgress } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport AddIcon from \"@mui/icons-material/Add\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { createList, fetchUserLists } from \"../redux/slices/lists\";\n\nimport ListItem from \"../components/ListItem\";\nimport AddListModal from \"../components/modals/AddListModal\";\n\nimport useAuth from \"../hooks/useAuth\";\nimport useToast from \"../hooks/useToast\";\n\nconst useStyles = makeStyles((theme) => ({\n  fab: {\n    right: theme.spacing(2),\n    bottom: theme.spacing(2),\n  },\n}));\n\nconst ListsPage = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const lists = useSelector((store) => store.lists);\n  const auth = useAuth();\n\n  const [modalOpen, setModalOpen] = useState(false);\n\n  const toast = useToast();\n\n  useEffect(() => {\n    if (auth.user) {\n      dispatch(fetchUserLists());\n    }\n  }, [auth.user, dispatch]);\n\n  const renderLists = () => {\n    const listItems = lists.items?.map((l) => (\n      <Grid\n        container\n        item\n        xs={6}\n        sm={4}\n        md={3}\n        lg={2}\n        justifyContent=\"center\"\n        key={l.id}\n      >\n        <ListItem name={l.name} id={l.id} todos={l.todos || []} />\n      </Grid>\n    ));\n\n    // TODO: handle when fetch is done and there are no lists\n\n    return listItems;\n  };\n\n  const handleOnAddClick = () => {\n    setModalOpen(true);\n  };\n\n  const handleOnSubmit = (list) => {\n    if (!list.name || !list.name.length) return;\n    setModalOpen(false);\n    dispatch(createList(list));\n    toast.success(\"Se ha creado la lista con exito!\");\n  };\n\n  console.log(\"@@ Lists page render\");\n\n  return (\n    <Box>\n      {lists.loading && <LinearProgress color=\"secondary\" />}\n      <Grid container spacing={1} padding={1}>\n        {renderLists()}\n      </Grid>\n\n      <AddListModal\n        open={modalOpen}\n        onCancel={() => setModalOpen(false)}\n        onSubmit={handleOnSubmit}\n      />\n\n      <Fab\n        sx={{ position: \"fixed\" }}\n        onClick={handleOnAddClick}\n        color=\"primary\"\n        className={classes.fab}\n      >\n        <AddIcon />\n      </Fab>\n    </Box>\n  );\n};\n\nexport default ListsPage;\n","import React, { useState } from \"react\";\nimport {\n  TextField,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  InputLabel,\n  Button,\n} from \"@mui/material\";\n\nconst UpdateTodoModal = ({ open, onCancel, onSubmit, todo }) => {\n  const [inputs, setInputs] = useState({\n    name: todo?.name,\n    description: todo?.description,\n  });\n\n  const handleOnChange = ({ target }) =>\n    setInputs({ ...inputs, [target.name]: target.value });\n\n  const resetForm = () =>\n    setInputs({ name: todo?.name, description: todo?.description });\n\n  const handleOnCancel = () => {\n    resetForm();\n    onCancel();\n  };\n\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n    onSubmit(inputs);\n  };\n\n  return (\n    <Dialog open={open}>\n      <DialogTitle>Actualizar todo</DialogTitle>\n      <DialogContent dividers>\n        <form onSubmit={handleOnSubmit}>\n          <InputLabel required>Nombre</InputLabel>\n          <TextField\n            name=\"name\"\n            placeholder=\"Todo name\"\n            onChange={handleOnChange}\n            value={inputs.name}\n          />\n          <InputLabel>Descripcion</InputLabel>\n          <TextField\n            name=\"description\"\n            placeholder=\"Descripcion acerca del todo\"\n            onChange={handleOnChange}\n            value={inputs.description}\n            multiline\n          />\n        </form>\n      </DialogContent>\n      <DialogActions sx={{ display: \"flex\", justifyContent: \"space-between\" }}>\n        <Button onClick={handleOnCancel} color=\"secondary\" variant=\"outlined\">\n          Cancelar\n        </Button>\n        <Button onClick={handleOnSubmit} color=\"primary\" variant=\"contained\">\n          Actualizar\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default UpdateTodoModal;\n","import React from \"react\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  DialogContentText,\n} from \"@mui/material\";\n\nconst ViewTodoModal = ({ open, onClose, todo }) => {\n  return (\n    <Dialog open={open} fullWidth>\n      <DialogTitle>{todo.name}</DialogTitle>\n      <DialogContent dividers>\n        <DialogContentText style={{ whiteSpace: \"pre-line\" }}>\n          {todo.description}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions sx={{ display: \"flex\", justifyContent: \"center\" }}>\n        <Button onClick={() => onClose()} color=\"primary\" variant=\"contained\">\n          Cerrar\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default ViewTodoModal;\n","import React, { useState } from \"react\";\n\nimport {\n  Box,\n  Checkbox,\n  Typography,\n  Menu,\n  IconButton,\n  MenuItem,\n  ListItemIcon,\n} from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport MoreHorizIcon from \"@mui/icons-material/MoreHoriz\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\n\nimport UpdateTodoModal from \"./modals/UpdateTodoModal\";\nimport ViewTodoModal from \"./modals/ViewTodoModal\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    backgroundColor: theme.palette.secondary.main,\n    borderRadius: theme.spacing(2),\n    margin: \"8px 4px\",\n    color: theme.palette.secondary.text,\n  },\n}));\n\nconst TodoItem = ({ id, name, description, isDone, onUpdate, onDelete }) => {\n  const classes = useStyles();\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [updateTodoOpen, setUpdateTodoOpen] = useState(false);\n  const [viewTodoOpen, setViewTodoOpen] = useState(false);\n\n  const closeMenu = () => setAnchorEl(null);\n\n  const openMenu = (event) => setAnchorEl(event.currentTarget);\n\n  const handleOnUpdateClick = () => {\n    closeMenu();\n    setUpdateTodoOpen(true);\n  };\n\n  const handleOnUpdate = (update) => {\n    setUpdateTodoOpen(false);\n    onUpdate(id, update);\n  };\n\n  const handleOnDeleteClick = () => {\n    closeMenu();\n    onDelete(id);\n  };\n\n  const handleOnCheck = ({ target }) => {\n    onUpdate(id, { isDone: target.checked });\n  };\n\n  const handleOnClick = () => {\n    if (description) setViewTodoOpen(true);\n  };\n\n  return (\n    <Box className={classes.container}>\n      <Checkbox color=\"default\" checked={!!isDone} onChange={handleOnCheck} />\n      <Typography color=\"inherit\" onClick={handleOnClick}>\n        {name}\n      </Typography>\n      <div>\n        <IconButton onClick={openMenu} color=\"inherit\">\n          <MoreHorizIcon />\n        </IconButton>\n        <Menu\n          anchorEl={anchorEl}\n          open={Boolean(anchorEl)}\n          onClose={closeMenu}\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"center\",\n          }}\n          transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"center\",\n          }}\n        >\n          <MenuItem onClick={handleOnUpdateClick}>\n            <ListItemIcon>\n              <EditIcon color=\"inherit\" />\n            </ListItemIcon>\n            Editar\n          </MenuItem>\n          <MenuItem onClick={handleOnDeleteClick}>\n            <ListItemIcon>\n              <DeleteIcon color=\"inherit\" />\n            </ListItemIcon>\n            Borrar\n          </MenuItem>\n        </Menu>\n      </div>\n\n      <UpdateTodoModal\n        open={updateTodoOpen}\n        onCancel={() => setUpdateTodoOpen(false)}\n        onSubmit={handleOnUpdate}\n        todo={{ id, name, description }}\n      />\n      <ViewTodoModal\n        open={viewTodoOpen}\n        onClose={() => setViewTodoOpen(false)}\n        todo={{ id, name, description }}\n      />\n    </Box>\n  );\n};\n\nexport default TodoItem;\n","import React, { useState } from \"react\";\nimport {\n  TextField,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  InputLabel,\n  Button,\n  Divider,\n} from \"@mui/material\";\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@mui/icons-material/KeyboardArrowUp\";\n\nconst AddTodoModal = ({ open, onCancel, onSubmit }) => {\n  const [inputs, setInputs] = useState({ name: \"\", description: \"\" });\n  const [hiddenDescription, setHiddenDescription] = useState(true);\n\n  const handleOnChange = ({ target }) =>\n    setInputs({ ...inputs, [target.name]: target.value });\n\n  const resetForm = () => setInputs({ name: \"\", description: \"\" });\n\n  const handleOnCancel = () => {\n    resetForm();\n    onCancel();\n  };\n\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n    onSubmit(inputs);\n    resetForm();\n  };\n\n  return (\n    <Dialog open={open}>\n      <DialogTitle>Crear un nuevo todo</DialogTitle>\n      <DialogContent dividers>\n        <form onSubmit={handleOnSubmit}>\n          <InputLabel required>Nombre</InputLabel>\n          <TextField\n            name=\"name\"\n            placeholder=\"Nombre para este todo\"\n            onChange={handleOnChange}\n            value={inputs.name}\n            autoFocus\n          />\n          <InputLabel\n            onClick={() => setHiddenDescription(!hiddenDescription)}\n            sx={{ display: \"flex\", alignItems: \"center\", marginTop: 1 }}\n          >\n            Descripcion\n            {!hiddenDescription ? (\n              <KeyboardArrowDownIcon color=\"inherit\" />\n            ) : (\n              <KeyboardArrowUpIcon color=\"inherit\" />\n            )}\n          </InputLabel>\n\n          {hiddenDescription && <Divider />}\n\n          {!hiddenDescription && (\n            <TextField\n              name=\"description\"\n              placeholder=\"Descripcion acerca de este todo\"\n              onChange={handleOnChange}\n              value={inputs.description}\n              multiline\n            />\n          )}\n        </form>\n      </DialogContent>\n      <DialogActions sx={{ display: \"flex\", justifyContent: \"space-between\" }}>\n        <Button onClick={handleOnCancel} color=\"secondary\" variant=\"outlined\">\n          Cancelar\n        </Button>\n        <Button onClick={handleOnSubmit} color=\"primary\" variant=\"contained\">\n          Crear\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default AddTodoModal;\n","import React from \"react\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n} from \"@mui/material\";\n\nconst DeleteListModal = ({ list, onCancel, onSubmit, open }) => {\n  const handleOnSubmit = () => onSubmit(list.id);\n\n  return (\n    <Dialog open={open}>\n      <DialogTitle>Borrar {list.name}</DialogTitle>\n      <DialogContent dividers>\n        Estas a punto de borrar esta lista de forma permanente\n      </DialogContent>\n      <DialogActions sx={{ display: \"flex\", justifyContent: \"space-between\" }}>\n        <Button onClick={onCancel} color=\"secondary\" variant=\"outlined\">\n          Cancelar\n        </Button>\n        <Button onClick={handleOnSubmit} color=\"primary\" variant=\"contained\">\n          Borrar\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default DeleteListModal;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Button,\n  TextField,\n} from \"@mui/material\";\n\nconst UpdateListModal = ({ open, onCancel, onSubmit, list }) => {\n  const [inputs, setInputs] = useState({\n    name: list.name,\n  });\n\n  const handleOnChange = ({ target }) =>\n    setInputs({ ...inputs, [target.name]: target.value });\n\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n    onSubmit(list.id, inputs);\n  };\n\n  return (\n    <Dialog open={open}>\n      <DialogTitle>Actualizar lista</DialogTitle>\n      <DialogContent dividers>\n        <form onSubmit={handleOnSubmit}>\n          <TextField\n            name=\"name\"\n            value={inputs.name}\n            onChange={handleOnChange}\n          />\n        </form>\n      </DialogContent>\n      <DialogActions sx={{ display: \"flex\", justifyContent: \"space-between\" }}>\n        <Button color=\"secondary\" variant=\"outlined\" onClick={onCancel}>\n          Cancelar\n        </Button>\n        <Button color=\"primary\" variant=\"contained\" onClick={handleOnSubmit}>\n          Actualizar\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nUpdateListModal.propTypes = {\n  open: PropTypes.bool,\n  onCancel: PropTypes.func,\n  onSubmit: PropTypes.func,\n  list: PropTypes.shape({\n    name: PropTypes.string,\n  }),\n};\n\nUpdateListModal.defaultProps = {\n  list: null,\n};\n\nexport default UpdateListModal;\n","import React, { useMemo } from \"react\";\n\nimport { Box, Typography, Paper } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport CheckIcon from \"@mui/icons-material/Check\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"100%\",\n  },\n  header: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.primary.text,\n  },\n  name: {\n    paddingLeft: theme.spacing(5),\n    color: theme.palette.secondary.main,\n  },\n  nameChecked: {\n    paddingLeft: theme.spacing(5),\n    color: theme.palette.secondary.text,\n    textDecoration: \"line-through\",\n    display: \"flex\",\n  },\n}));\n\nconst ExportableList = React.forwardRef(({ list, removeFinished }, ref) => {\n  const classes = useStyles();\n\n  const items = useMemo(() => {\n    if (removeFinished) {\n      return list.todos.filter((to) => to.isDone !== true);\n    }\n    return list.todos;\n  }, [list.todos, removeFinished]);\n\n  return (\n    <div ref={ref}>\n      <Paper className={classes.root} id=\"exportable-img\">\n        <Box className={classes.header}>\n          <Typography variant=\"h6\" color=\"inherit\">\n            {list.name?.toUpperCase()}\n          </Typography>\n        </Box>\n        <ol>\n          {items.map((t, i) => (\n            <li key={i}>\n              <Typography\n                className={!!t.isDone ? classes.nameChecked : classes.name}\n              >\n                {t.name} {!!t.isDone && <CheckIcon color=\"success\" />}\n              </Typography>\n            </li>\n          ))}\n        </ol>\n      </Paper>\n    </div>\n  );\n});\n\nexport default ExportableList;\n","const imageFormats = {\n  png: \"png\",\n  svg: \"svg\",\n  jpeg: \"jpeg\",\n};\n\nexport default imageFormats;\n","import React, { useState, createRef } from \"react\";\n\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  InputLabel,\n  Select,\n  MenuItem,\n  FormControl,\n  FormControlLabel,\n  Checkbox,\n  Typography,\n} from \"@mui/material\";\n\nimport ExportableList from \"../ExportableList\";\n\nimport imageFormats from \"../../constants/imageFormats\";\n\nconst CreateImageModal = ({ open, onCancel, onSubmit, list }) => {\n  const [format, setFormat] = useState(imageFormats.png);\n  const [removeFinished, setIncludeFinished] = useState(false);\n\n  const nodeRef = createRef();\n\n  const handleOnFormatChange = ({ target }) => {\n    setFormat(target.value);\n  };\n\n  const handleOnIncludeFinished = ({ target }) => {\n    setIncludeFinished(target.checked);\n  };\n\n  const handleOnSubmit = () => {\n    onSubmit(format, nodeRef.current);\n  };\n\n  return (\n    <Dialog open={open} fullWidth>\n      <DialogTitle>Configura la lista antes de exportar</DialogTitle>\n      <DialogContent\n        dividers\n        sx={{\n          display: \"flex\",\n          flexDirection: \"column\",\n        }}\n      >\n        <FormControl fullWidth>\n          <InputLabel id=\"imageFormatId\">Formato de la imagen</InputLabel>\n          <Select\n            label=\"Formato de la imagen\"\n            labelId=\"imageFormatId\"\n            value={format}\n            onChange={handleOnFormatChange}\n          >\n            {Object.keys(imageFormats).map((f, i) => (\n              <MenuItem key={i} value={f}>\n                {f}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n        <FormControlLabel\n          label=\"Quitar items finalizados?\"\n          labelPlacement=\"end\"\n          control={\n            <Checkbox\n              checked={removeFinished}\n              onChange={handleOnIncludeFinished}\n            />\n          }\n        />\n        <Typography variant=\"caption\" textAlign=\"end\">\n          Vista previa\n        </Typography>\n        <ExportableList\n          list={list}\n          removeFinished={removeFinished}\n          ref={nodeRef}\n        />\n      </DialogContent>\n      <DialogActions sx={{ display: \"flex\", justifyContent: \"space-between\" }}>\n        <Button onClick={onCancel} color=\"secondary\" variant=\"outlined\">\n          Cerrar\n        </Button>\n        <Button onClick={handleOnSubmit} color=\"primary\" variant=\"contained\">\n          Descargar\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default CreateImageModal;\n","import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\n\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  IconButton,\n  Menu,\n  MenuItem,\n  ListItemIcon,\n} from \"@mui/material\";\n\nimport MenuOutlinedIcon from \"@mui/icons-material/MenuOutlined\";\nimport KeyboardArrowLeftOutlinedIcon from \"@mui/icons-material/KeyboardArrowLeftOutlined\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport ImageIcon from \"@mui/icons-material/Image\";\n\nimport DeleteListModal from \"./modals/DeleteListModal\";\nimport UpdateListModal from \"./modals/UpdateListModal\";\nimport CreateImageModal from \"./modals/CreateImageModal\";\n\nimport { removeList, updateList } from \"../redux/slices/lists\";\n\nimport useToast from \"../hooks/useToast\";\n\nimport html2canvas from \"html2canvas\";\nimport download from \"downloadjs\";\n\nconst ListsNav = ({ list }) => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [deleteListOpen, setDeleteListOpen] = useState(false);\n  const [updateListOpen, setUpdateListOpen] = useState(false);\n  const [createImgOpen, setCreateImgOpen] = useState(false);\n\n  const toast = useToast();\n\n  const handleOnReturn = () => {\n    navigate(-1);\n  };\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const closeMenu = () => setAnchorEl(null);\n\n  const handleOnEditClick = () => {\n    closeMenu();\n    setUpdateListOpen(true);\n  };\n\n  const handleOnUpdate = (listId, update) => {\n    setUpdateListOpen(false);\n    dispatch(updateList({ id: listId, ...update }));\n    toast.success(\"Lista actualizada correctamente!\");\n  };\n\n  const handleOnDeleteClick = () => {\n    closeMenu();\n    setDeleteListOpen(true);\n  };\n\n  const handleOnDelete = (listId) => {\n    setDeleteListOpen(false);\n    dispatch(removeList(listId));\n    navigate(\"/\");\n    toast.success(\"Lista borrada con exito!\");\n  };\n\n  const handleOnCreateImgClick = () => {\n    closeMenu();\n    setCreateImgOpen(true);\n  };\n\n  const handleOnCreateImg = async (format, nodeRef) => {\n    setCreateImgOpen(false);\n\n    try {\n      const imageType = `image/${format}`;\n      const fileName = `${list.id}.${format}`;\n      const canvas = await html2canvas(nodeRef);\n\n      download(canvas.toDataURL(imageType), fileName);\n      toast.success(\"Imagen generada con exito!\");\n    } catch (err) {\n      toast.error(\"Ha ocurrido un error\");\n      console.log(err);\n    }\n  };\n\n  console.log(\"@@ Todos nav render\");\n\n  return (\n    <>\n      <AppBar position=\"fixed\">\n        <Toolbar sx={{ display: \"flex\", justifyContent: \"space-between\" }}>\n          <IconButton onClick={handleOnReturn} color=\"inherit\">\n            <KeyboardArrowLeftOutlinedIcon />\n          </IconButton>\n          <Typography variant=\"h6\" component=\"label\">\n            {list.name.toUpperCase()}\n          </Typography>\n          <div>\n            <IconButton onClick={handleMenu} color=\"inherit\">\n              <MenuOutlinedIcon />\n            </IconButton>\n            <Menu\n              anchorEl={anchorEl}\n              open={Boolean(anchorEl)}\n              onClose={closeMenu}\n              anchorOrigin={{\n                vertical: \"bottom\",\n                horizontal: \"center\",\n              }}\n              transformOrigin={{\n                vertical: \"top\",\n                horizontal: \"center\",\n              }}\n            >\n              <MenuItem onClick={handleOnEditClick}>\n                <ListItemIcon>\n                  <EditIcon />\n                </ListItemIcon>\n                Editar\n              </MenuItem>\n              <MenuItem onClick={handleOnDeleteClick}>\n                <ListItemIcon>\n                  <DeleteIcon />\n                </ListItemIcon>\n                Borrar\n              </MenuItem>\n              <MenuItem onClick={handleOnCreateImgClick}>\n                <ListItemIcon>\n                  <ImageIcon />\n                </ListItemIcon>\n                Generar imagen\n              </MenuItem>\n            </Menu>\n          </div>\n        </Toolbar>\n      </AppBar>\n      <Toolbar />\n      <DeleteListModal\n        open={deleteListOpen}\n        onCancel={() => setDeleteListOpen(false)}\n        onSubmit={handleOnDelete}\n        list={list}\n      />\n      <UpdateListModal\n        open={updateListOpen}\n        onCancel={() => setUpdateListOpen(false)}\n        onSubmit={handleOnUpdate}\n        list={list}\n      />\n      <CreateImageModal\n        open={createImgOpen}\n        onCancel={() => setCreateImgOpen(false)}\n        onSubmit={handleOnCreateImg}\n        list={list}\n      />\n    </>\n  );\n};\n\nexport default ListsNav;\n","import React, { useState } from \"react\";\n\nimport { useParams } from \"react-router\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { Box, Fab, LinearProgress } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport AddIcon from \"@mui/icons-material/Add\";\n\nimport TodoItem from \"../components/TodoItem\";\nimport AddTodoModal from \"../components/modals/AddTodoModal\";\nimport TodosNav from \"../components/TodosNav\";\n\nimport { createTodo, updateTodo, removeTodo } from \"../redux/slices/lists\";\n\nimport useToast from \"../hooks/useToast\";\n\nconst useStyles = makeStyles((theme) => ({\n  fab: {\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n}));\n\nconst TodosPage = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { listId } = useParams();\n\n  const currentList = useSelector((store) =>\n    store.lists.items.find((li) => li.id === listId)\n  );\n  const listsLoading = useSelector((store) => store.lists.loading);\n\n  const [addTodoOpen, setAddTodoOpen] = useState(false);\n\n  const toast = useToast();\n\n  const renderTodos = () => {\n    if (!currentList.todos) return [];\n\n    return currentList.todos.map((t) => (\n      <TodoItem\n        key={t.id}\n        id={t.id}\n        name={t.name}\n        isDone={t.isDone}\n        description={t.description}\n        onUpdate={handleOnUpdate}\n        onDelete={handleOnDelete}\n      />\n    ));\n  };\n\n  const handleOnCreate = (newTodo) => {\n    if (!newTodo.name) return;\n    setAddTodoOpen(false);\n    dispatch(createTodo({ ...newTodo, listId }));\n    toast.success(\"Todo creado con exito!\");\n  };\n\n  const handleOnUpdate = (todoId, update) => {\n    if (update.hasOwnProperty(\"name\") && !update.name) return;\n    dispatch(updateTodo({ listId, todoId, ...update }));\n    toast.success(\"Todo actualizada con exito\");\n  };\n\n  const handleOnDelete = (todoId) => {\n    dispatch(removeTodo({ listId, todoId }));\n    toast.success(\"Todo removida con exito\");\n  };\n\n  console.log(\"@@ Todos page render\");\n\n  return (\n    <>\n      <TodosNav list={currentList} />\n      {listsLoading && <LinearProgress />}\n\n      <Box p={1}>{renderTodos()}</Box>\n\n      <AddTodoModal\n        open={addTodoOpen}\n        onCancel={() => setAddTodoOpen(false)}\n        onSubmit={handleOnCreate}\n      />\n\n      <Fab\n        sx={{ position: \"fixed\" }}\n        onClick={() => setAddTodoOpen(true)}\n        color=\"primary\"\n        className={classes.fab}\n      >\n        <AddIcon />\n      </Fab>\n    </>\n  );\n};\n\nexport default TodosPage;\n","import React from \"react\";\n// TODO: mui components\n\nconst NotFoundPage = () => (\n  <article>\n    <h2>Section not found 404</h2>\n    <p>This page does not exist</p>\n  </article>\n);\n\nexport default NotFoundPage;\n","import React from \"react\";\n\nimport { Box, Typography } from \"@mui/material\";\n\nconst AboutPage = () => {\n  return (\n    <Box p={1}>\n      <Typography variant=\"h4\" component=\"h2\">\n        Equipo de desarrollo:\n      </Typography>\n      <ul>\n        <li>Ticky (Project manager)</li>\n        <li>Yayis (Product owner)</li>\n        <li>Gustavo Loera (Main Developer)</li>\n        <li>Nancy Sarahi (Ideas)</li>\n      </ul>\n      <Typography variant=\"caption\">Version 1.1.0</Typography>\n      <Typography>Made with ❤️ by GALV</Typography>\n    </Box>\n  );\n};\n\nexport default AboutPage;\n","import React from \"react\";\n\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  FormControl,\n  InputLabel,\n  Select,\n  Button,\n  MenuItem,\n} from \"@mui/material\";\n\nconst UpdateConfigurationModal = ({\n  open,\n  language,\n  languages,\n  theme,\n  themes,\n  onlanguagechange,\n  onThemeChange,\n  onClose,\n}) => {\n  const handleOnLanguageChange = ({ target }) => {\n    const selected = languages.find((l) => l.code === target.value);\n    onlanguagechange(selected);\n  };\n\n  const handleOnThemeChange = ({ target }) => {\n    const selected = themes.find((t) => t.code === target.value);\n    onThemeChange(selected);\n  };\n\n  console.log(\"@@ Update modal render\");\n\n  return (\n    <Dialog open={open} maxWidth=\"xs\" fullWidth>\n      <DialogTitle>Actualizar la configuracion de la app</DialogTitle>\n      <DialogContent dividers sx={{ display: \"flex\", flexDirection: \"column\" }}>\n        <FormControl margin=\"dense\">\n          <InputLabel id=\"languageId\">Lenguage</InputLabel>\n          <Select\n            disabled\n            labelId=\"languageId\"\n            label=\"Language\"\n            name=\"language\"\n            value={language.code}\n            onChange={handleOnLanguageChange}\n          >\n            {languages.map((l) => (\n              <MenuItem key={l.code} value={l.code}>\n                {l.name}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n        <FormControl margin=\"dense\">\n          <InputLabel id=\"themeId\">Tema</InputLabel>\n          <Select\n            labelId=\"themeId\"\n            label=\"Theme\"\n            name=\"theme\"\n            value={theme.code}\n            onChange={handleOnThemeChange}\n          >\n            {themes.map((t) => (\n              <MenuItem key={t.code} value={t.code}>\n                {t.name}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </DialogContent>\n      <DialogActions sx={{ display: \"flex\", justifyContent: \"center\" }}>\n        <Button color=\"primary\" variant=\"contained\" onClick={onClose}>\n          Cerrar\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default UpdateConfigurationModal;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Box,\n  Button,\n  Typography,\n  CircularProgress,\n  Stack,\n} from \"@mui/material\";\nimport { ModeEdit } from \"@mui/icons-material\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport UpdateConfigurationModal from \"../components/modals/UpdateConfigurationModal\";\n\nimport { fetchThemes } from \"../redux/slices/themes\";\nimport { fetchLanguages } from \"../redux/slices/languages\";\nimport { updateConfiguration } from \"../redux/slices/configuration\";\n\nimport useConfiguration from \"../hooks/useConfiguration\";\nimport useToast from \"../hooks/useToast\";\n\nconst ConfigurationPage = () => {\n  const dispatch = useDispatch();\n\n  const themes = useSelector((store) => store.themes);\n  const languages = useSelector((store) => store.languages);\n\n  const { theme, language } = useConfiguration();\n  const toast = useToast();\n\n  const [updated, setUpdated] = useState(false);\n  const [updateModalOpen, setModalOpen] = useState(false);\n\n  useEffect(() => {\n    if (!languages.items.length) {\n      console.log(\"fetch languages\");\n      dispatch(fetchLanguages({}));\n    }\n    if (!themes.items.length) {\n      console.log(\"fetch themes\");\n      dispatch(fetchThemes({}));\n    }\n  }, [dispatch, languages, themes]);\n\n  const handleOnLanguageChange = (selectedLanguage) => {\n    dispatch(updateConfiguration({ language: selectedLanguage }));\n    setUpdated(true);\n  };\n\n  const handleOnThemeChange = (selectedTheme) => {\n    dispatch(updateConfiguration({ theme: selectedTheme }));\n    setUpdated(true);\n  };\n\n  const handleOnUpdateClose = () => {\n    setModalOpen(false);\n\n    if (updated) {\n      toast.success(\"Los cambios fueron aplicados con exito!\");\n      setUpdated(false);\n    }\n  };\n\n  const handleOnChangeClick = () => {\n    setModalOpen(true);\n    setUpdated(false);\n  };\n\n  console.log(\"@@ Config page render\");\n\n  return (\n    <Box p={2} display=\"flex\" flexDirection=\"column\">\n      <Stack spacing={2}>\n        <Typography variant=\"body1\">\n          Puedes encontrar la configuracion de la app aqui.\n        </Typography>\n\n        <Box display=\"flex\" justifyContent=\"space-between\">\n          <Typography variant=\"subtitle2\">Tema:</Typography>\n          <Typography variant=\"body2\">{theme.name}</Typography>\n        </Box>\n        <Box display=\"flex\" justifyContent=\"space-between\">\n          <Typography variant=\"subtitle2\">Lenguage:</Typography>\n          <Typography variant=\"body2\">{language.name}</Typography>\n        </Box>\n\n        <Button\n          sx={{ alignSelf: \"flex-end\" }}\n          size=\"small\"\n          variant=\"contained\"\n          startIcon={\n            themes.loading || languages.loading ? (\n              <CircularProgress size={20} color=\"primary\" />\n            ) : (\n              <ModeEdit />\n            )\n          }\n          onClick={handleOnChangeClick}\n          disabled={themes.loading || languages.loading}\n        >\n          Cambiar\n        </Button>\n      </Stack>\n\n      <UpdateConfigurationModal\n        open={updateModalOpen}\n        onClose={handleOnUpdateClose}\n        onThemeChange={handleOnThemeChange}\n        onLanguageChange={handleOnLanguageChange}\n        theme={theme}\n        themes={themes.items}\n        language={language}\n        languages={languages.items}\n      />\n    </Box>\n  );\n};\n\nexport default ConfigurationPage;\n","import React, { useState, useMemo } from \"react\";\n\nimport {\n  Paper,\n  TextField,\n  Button,\n  InputLabel,\n  Typography,\n} from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\n\nimport { Link, useNavigate } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  formContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: theme.spacing(2),\n    margin: theme.spacing(2),\n    maxWidth: 500,\n  },\n  link: {\n    textDecoration: \"none\",\n    color: theme.palette.secondary.main,\n  },\n}));\n\nconst initialValue = { value: \"\", error: false, helperText: null };\n\nconst LoginForm = ({ onSubmit, onEmailBlur, onPwdBlur }) => {\n  const classes = useStyles();\n  const navigate = useNavigate();\n\n  const [email, setEmail] = useState(initialValue);\n  const [pwd, setPwd] = useState(initialValue);\n\n  const submitIsDisabled = useMemo(() => {\n    if (email.error || pwd.error) return true;\n\n    return false;\n  }, [email, pwd]);\n\n  const handleOnEmailChange = ({ target }) => {\n    setEmail({ ...email, value: target.value });\n  };\n\n  const handleOnEmailBlur = () => {\n    const error = onEmailBlur(email.value);\n\n    if (error) {\n      setEmail({\n        ...email,\n        error: true,\n        helperText: error,\n      });\n    } else {\n      setEmail({ ...initialValue, value: email.value });\n    }\n  };\n\n  const handleOnPwdChange = ({ target }) => {\n    setPwd({ ...pwd, value: target.value });\n  };\n\n  const handleOnPwdBlur = () => {\n    const error = onPwdBlur(pwd.value);\n\n    if (error) {\n      setPwd({\n        ...pwd,\n        error: true,\n        helperText: error,\n      });\n    } else {\n      setPwd({ ...initialValue, value: pwd.value });\n    }\n  };\n\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n    if (email.error || pwd.error) return;\n\n    onSubmit({ email: email.value, password: pwd.value });\n  };\n\n  const handleOnForgotPwdClick = () => {\n    navigate(\"/forgot-pwd\", { state: { pageName: \"Recuperar contraseña\" } });\n  };\n\n  return (\n    <form onSubmit={handleOnSubmit}>\n      <Paper className={classes.formContainer}>\n        <InputLabel required>Correo</InputLabel>\n        <TextField\n          onChange={handleOnEmailChange}\n          onBlur={handleOnEmailBlur}\n          name=\"email\"\n          placeholder=\"email\"\n          value={email.value}\n          error={email.error}\n          helperText={email.helperText}\n          sx={{ marginBottom: 2 }}\n        />\n        <InputLabel required>Contraseña</InputLabel>\n        <TextField\n          onChange={handleOnPwdChange}\n          onBlur={handleOnPwdBlur}\n          name=\"pwd\"\n          placeholder=\"password\"\n          type=\"password\"\n          value={pwd.value}\n          error={pwd.error}\n          helperText={pwd.helperText}\n        />\n\n        <Button\n          color=\"primary\"\n          type=\"submit\"\n          variant=\"contained\"\n          sx={{ marginY: 2 }}\n          disabled={submitIsDisabled}\n        >\n          Login\n        </Button>\n\n        <Button\n          onClick={handleOnForgotPwdClick}\n          color=\"secondary\"\n          sx={{ marginBottom: 3 }}\n        >\n          Olvide mi contraseña\n        </Button>\n        <Typography>\n          Aun no tienes una cuenta? crea una{\" \"}\n          <Link\n            to=\"/register\"\n            className={classes.link}\n            state={{ pageName: \"Crear una cuenta\" }}\n          >\n            aqui\n          </Link>\n        </Typography>\n      </Paper>\n    </form>\n  );\n};\n\nexport default LoginForm;\n","import React, { useEffect } from \"react\";\n\nimport { Box, LinearProgress } from \"@mui/material\";\n\nimport LoginForm from \"../components/LoginForm\";\n\nimport { login, setError } from \"../redux/slices/auth\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport useToast from \"../hooks/useToast\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport validator from \"validator\";\n\nimport { pwdMinLength } from \"../constants/defaults\";\n\nconst LoginPage = () => {\n  const navigate = useNavigate();\n  const auth = useSelector((store) => store.auth);\n  const dispatch = useDispatch();\n  const toast = useToast();\n\n  useEffect(() => {\n    if (auth.error) {\n      toast.error(auth.error);\n      return dispatch(setError(null));\n    }\n  }, [auth.error, toast, dispatch]);\n\n  const handleOnEmailBlur = (email) => {\n    if (!validator.isEmail(email)) {\n      return \"Ingrese un correo valido\";\n    }\n    return null;\n  };\n\n  const handleOnPwdBlur = (pwd) => {\n    if (!validator.isLength(pwd, { min: pwdMinLength })) {\n      return \"Ingrese una contraseña valida.\";\n    }\n    return null;\n  };\n\n  const handleOnSubmit = async (formValues) => {\n    const loginRes = await dispatch(login(formValues));\n\n    if (loginRes.payload) {\n      navigate(\"/\", { state: { pageName: \"Mis listas\" } });\n      toast.info(\"Session iniciada con exito\");\n    }\n  };\n\n  console.log(\"@@ Login page render\");\n\n  return (\n    <>\n      {auth.loading && <LinearProgress color=\"secondary\" />}\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n        <LoginForm\n          onSubmit={handleOnSubmit}\n          onEmailBlur={handleOnEmailBlur}\n          onPwdBlur={handleOnPwdBlur}\n        />\n      </Box>\n    </>\n  );\n};\n\nexport default LoginPage;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\n// redux store\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./redux/configureStore\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nimport Themed from \"./components/Themed\";\nimport { CssBaseline } from \"@mui/material\";\n\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport ListsPage from \"./pages/ListsPage\";\nimport TodosPage from \"./pages/TodosPage\";\nimport NotFoundPage from \"./pages/NotFoundPage\";\nimport AboutPage from \"./pages/AboutPage\";\nimport ConfigurationPage from \"./pages/ConfigurationPage\";\nimport LoginPage from \"./pages/LoginPage\";\n\nconst { store, persistor } = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate persistor={persistor} loading={<p>Loading data...</p>}>\n      <React.StrictMode>\n        <Themed>\n          <CssBaseline />\n          <BrowserRouter basename={process.env.REACT_APP_NAME}>\n            <Routes>\n              <Route path=\"/\" element={<App />}>\n                <Route index element={<ListsPage />} />\n                <Route path=\"list/:listId\" element={<TodosPage />} />\n                <Route path=\"about\" element={<AboutPage />} />\n                <Route path=\"configuration\" element={<ConfigurationPage />} />\n                <Route path=\"login\" element={<LoginPage />} />\n              </Route>\n              <Route path=\"*\" element={<NotFoundPage />} />\n            </Routes>\n          </BrowserRouter>\n        </Themed>\n      </React.StrictMode>\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}